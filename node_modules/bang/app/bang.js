

"use strict"




var express    = require('express')
var constants  = require('bang/commons/constants')

var commons    = require('bang/commons/commons')
var logger     = require('bang/logging/logger')

var rest       = {
	suggest: require('bang/rest/suggest'),
	search:  require('bang/rest/search'),
	about:   require('bang/rest/about')
}






var shutdown = uptime => {

	logger.info({

		uptime: (uptime( ) / (60 * 1000)).toFixed(2),
		unit:   'minutes'

	}, 'terminating Bang! server')

}





var bangServer = (config, callback) => {

	var app    = express( )
	var uptime = commons.timer( )

	app.get('/suggest', rest.suggest.bind({ }, config))
	app.get('/search',  rest.search .bind({ }, config))
	app.get('/about',   rest.about  .bind({ }, config))





	var server = app.listen(config.port, ( ) => {

		logger.info({
			port:    config.port,
			pid:     process.pid,
			version: constants.version
		},
		'Bang! listening')

		callback(app, server)

	})
	.on('error', err => {

		if (err.errno === 'EADDRINUSE') {

			logger.fatal({
				port: config.port
			}, 'port currently in use.')

		} else {

			logger.fatal('uncaught error.')

		}

		process.exit(1)

	})





	process.on('SIGTERM', process.exit)
	process.on('SIGINT',  process.exit)
	process.on('exit',    shutdown.bind({ }, uptime))

	process.on('uncaughtException', err => {

		logger.fatal({err}, 'uncaught exception.')

		process.exit(1)

	})

}





module.exports = bangServer
